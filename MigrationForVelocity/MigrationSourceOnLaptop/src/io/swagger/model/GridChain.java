/*
 * Boardwalk Cuboid Services
 * Boardwalk Rest API
 *
 * OpenAPI spec version: 1.0.2
 * Contact: apisupport@boardwalltech.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.CellChain;
import io.swagger.model.ColumnChain;
import io.swagger.model.FormulaValue;
import io.swagger.model.GridInfo;
import io.swagger.model.RowChain;
import io.swagger.model.StatusChange;
import io.swagger.model.Transaction;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonInclude;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
/**
 * GridChain
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-10-05T07:30:29.578Z")
public class GridChain   {
  @JsonProperty("gridId")
  private Integer gridId = null;

  @JsonProperty("gridInfo")
  private GridInfo gridInfo = null;

  @JsonProperty("maxTxId")
  private Integer maxTxId = null;

  @JsonProperty("gridRows")
  private List<RowChain> gridRows = null;

  @JsonProperty("gridColumns")
  private List<ColumnChain> gridColumns = null;

  @JsonProperty("gridCells")
  private List<CellChain> gridCells = null;

  @JsonProperty("gridTransactions")
  private List<Transaction> gridTransactions = null;

  @JsonProperty("gridFormulas")
  private List<FormulaValue> gridFormulas = null;

  @JsonProperty("gridCellStatusChanges")
  private List<StatusChange> gridCellStatusChanges = null;

  public GridChain gridId(Integer gridId) {
    this.gridId = gridId;
    return this;
  }

  /**
   * Get gridId
   * @return gridId
   **/
  @JsonProperty("gridId")
  @ApiModelProperty(value = "")
  public Integer getGridId() {
    return gridId;
  }

  public void setGridId(Integer gridId) {
    this.gridId = gridId;
  }

  public GridChain gridInfo(GridInfo gridInfo) {
    this.gridInfo = gridInfo;
    return this;
  }

  /**
   * Get gridInfo
   * @return gridInfo
   **/
  @JsonProperty("gridInfo")
  @ApiModelProperty(value = "")
  public GridInfo getGridInfo() {
    return gridInfo;
  }

  public void setGridInfo(GridInfo gridInfo) {
    this.gridInfo = gridInfo;
  }

  public GridChain maxTxId(Integer maxTxId) {
    this.maxTxId = maxTxId;
    return this;
  }

  /**
   * Get maxTxId
   * @return maxTxId
   **/
  @JsonProperty("maxTxId")
  @ApiModelProperty(value = "")
  public Integer getMaxTxId() {
    return maxTxId;
  }

  public void setMaxTxId(Integer maxTxId) {
    this.maxTxId = maxTxId;
  }

  public GridChain gridRows(List<RowChain> gridRows) {
    this.gridRows = gridRows;
    return this;
  }

  public GridChain addGridRowsItem(RowChain gridRowsItem) {
    if (this.gridRows == null) {
      this.gridRows = new ArrayList<RowChain>();
    }
    this.gridRows.add(gridRowsItem);
    return this;
  }

  /**
   * Get gridRows
   * @return gridRows
   **/
  @JsonProperty("gridRows")
  @ApiModelProperty(value = "")
  public List<RowChain> getGridRows() {
    return gridRows;
  }

  public void setGridRows(List<RowChain> gridRows) {
    this.gridRows = gridRows;
  }

  public GridChain gridColumns(List<ColumnChain> gridColumns) {
    this.gridColumns = gridColumns;
    return this;
  }

  public GridChain addGridColumnsItem(ColumnChain gridColumnsItem) {
    if (this.gridColumns == null) {
      this.gridColumns = new ArrayList<ColumnChain>();
    }
    this.gridColumns.add(gridColumnsItem);
    return this;
  }

  /**
   * Get gridColumns
   * @return gridColumns
   **/
  @JsonProperty("gridColumns")
  @ApiModelProperty(value = "")
  public List<ColumnChain> getGridColumns() {
    return gridColumns;
  }

  public void setGridColumns(List<ColumnChain> gridColumns) {
    this.gridColumns = gridColumns;
  }

  public GridChain gridCells(List<CellChain> gridCells) {
    this.gridCells = gridCells;
    return this;
  }

  public GridChain addGridCellsItem(CellChain gridCellsItem) {
    if (this.gridCells == null) {
      this.gridCells = new ArrayList<CellChain>();
    }
    this.gridCells.add(gridCellsItem);
    return this;
  }

  /**
   * Get gridCells
   * @return gridCells
   **/
  @JsonProperty("gridCells")
  @ApiModelProperty(value = "")
  public List<CellChain> getGridCells() {
    return gridCells;
  }

  public void setGridCells(List<CellChain> gridCells) {
    this.gridCells = gridCells;
  }

  public GridChain gridTransactions(List<Transaction> gridTransactions) {
    this.gridTransactions = gridTransactions;
    return this;
  }

  public GridChain addGridTransactionsItem(Transaction gridTransactionsItem) {
    if (this.gridTransactions == null) {
      this.gridTransactions = new ArrayList<Transaction>();
    }
    this.gridTransactions.add(gridTransactionsItem);
    return this;
  }

  /**
   * Get gridTransactions
   * @return gridTransactions
   **/
  @JsonProperty("gridTransactions")
  @ApiModelProperty(value = "")
  public List<Transaction> getGridTransactions() {
    return gridTransactions;
  }

  public void setGridTransactions(List<Transaction> gridTransactions) {
    this.gridTransactions = gridTransactions;
  }

  public GridChain gridFormulas(List<FormulaValue> gridFormulas) {
    this.gridFormulas = gridFormulas;
    return this;
  }

  public GridChain addGridFormulasItem(FormulaValue gridFormulasItem) {
    if (this.gridFormulas == null) {
      this.gridFormulas = new ArrayList<FormulaValue>();
    }
    this.gridFormulas.add(gridFormulasItem);
    return this;
  }

  /**
   * Get gridFormulas
   * @return gridFormulas
   **/
  @JsonProperty("gridFormulas")
  @ApiModelProperty(value = "")
  public List<FormulaValue> getGridFormulas() {
    return gridFormulas;
  }

  public void setGridFormulas(List<FormulaValue> gridFormulas) {
    this.gridFormulas = gridFormulas;
  }

  public GridChain gridCellStatusChanges(List<StatusChange> gridCellStatusChanges) {
    this.gridCellStatusChanges = gridCellStatusChanges;
    return this;
  }

  public GridChain addGridCellStatusChangesItem(StatusChange gridCellStatusChangesItem) {
    if (this.gridCellStatusChanges == null) {
      this.gridCellStatusChanges = new ArrayList<StatusChange>();
    }
    this.gridCellStatusChanges.add(gridCellStatusChangesItem);
    return this;
  }

  /**
   * Get gridCellStatusChanges
   * @return gridCellStatusChanges
   **/
  @JsonProperty("gridCellStatusChanges")
  @ApiModelProperty(value = "")
  public List<StatusChange> getGridCellStatusChanges() {
    return gridCellStatusChanges;
  }

  public void setGridCellStatusChanges(List<StatusChange> gridCellStatusChanges) {
    this.gridCellStatusChanges = gridCellStatusChanges;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GridChain gridChain = (GridChain) o;
    return Objects.equals(this.gridId, gridChain.gridId) &&
        Objects.equals(this.gridInfo, gridChain.gridInfo) &&
        Objects.equals(this.maxTxId, gridChain.maxTxId) &&
        Objects.equals(this.gridRows, gridChain.gridRows) &&
        Objects.equals(this.gridColumns, gridChain.gridColumns) &&
        Objects.equals(this.gridCells, gridChain.gridCells) &&
        Objects.equals(this.gridTransactions, gridChain.gridTransactions) &&
        Objects.equals(this.gridFormulas, gridChain.gridFormulas) &&
        Objects.equals(this.gridCellStatusChanges, gridChain.gridCellStatusChanges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gridId, gridInfo, maxTxId, gridRows, gridColumns, gridCells, gridTransactions, gridFormulas, gridCellStatusChanges);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GridChain {\n");
    
    sb.append("    gridId: ").append(toIndentedString(gridId)).append("\n");
    sb.append("    gridInfo: ").append(toIndentedString(gridInfo)).append("\n");
    sb.append("    maxTxId: ").append(toIndentedString(maxTxId)).append("\n");
    sb.append("    gridRows: ").append(toIndentedString(gridRows)).append("\n");
    sb.append("    gridColumns: ").append(toIndentedString(gridColumns)).append("\n");
    sb.append("    gridCells: ").append(toIndentedString(gridCells)).append("\n");
    sb.append("    gridTransactions: ").append(toIndentedString(gridTransactions)).append("\n");
    sb.append("    gridFormulas: ").append(toIndentedString(gridFormulas)).append("\n");
    sb.append("    gridCellStatusChanges: ").append(toIndentedString(gridCellStatusChanges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

