/*
 * Boardwalk Cuboid Services
 * Boardwalk Rest API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@boardwalltech.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * CellChangeDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-05-23T17:17:30.780Z")
public class CellChangeDetails   {
  @JsonProperty("rowSeq")
  private Integer rowSeq = null;

  @JsonProperty("colSeq")
  private Integer colSeq = null;

  @JsonProperty("cellValue")
  private String cellValue = null;

  @JsonProperty("cellFmla")
  private String cellFmla = null;

  @JsonProperty("changeFlag")
  private Integer changeFlag = null;

  public CellChangeDetails rowSeq(Integer rowSeq) {
    this.rowSeq = rowSeq;
    return this;
  }

  /**
   * Get rowSeq
   * @return rowSeq
   **/
  @JsonProperty("rowSeq")
  @ApiModelProperty(value = "")
  public Integer getRowSeq() {
    return rowSeq;
  }

  public void setRowSeq(Integer rowSeq) {
    this.rowSeq = rowSeq;
  }

  public CellChangeDetails colSeq(Integer colSeq) {
    this.colSeq = colSeq;
    return this;
  }

  /**
   * Get colSeq
   * @return colSeq
   **/
  @JsonProperty("colSeq")
  @ApiModelProperty(value = "")
  public Integer getColSeq() {
    return colSeq;
  }

  public void setColSeq(Integer colSeq) {
    this.colSeq = colSeq;
  }

  public CellChangeDetails cellValue(String cellValue) {
    this.cellValue = cellValue;
    return this;
  }

  /**
   * Get cellValue
   * @return cellValue
   **/
  @JsonProperty("cellValue")
  @ApiModelProperty(value = "")
  public String getCellValue() {
    return cellValue;
  }

  public void setCellValue(String cellValue) {
    this.cellValue = cellValue;
  }

  public CellChangeDetails cellFmla(String cellFmla) {
    this.cellFmla = cellFmla;
    return this;
  }

  /**
   * Get cellFmla
   * @return cellFmla
   **/
  @JsonProperty("cellFmla")
  @ApiModelProperty(value = "")
  public String getCellFmla() {
    return cellFmla;
  }

  public void setCellFmla(String cellFmla) {
    this.cellFmla = cellFmla;
  }

  public CellChangeDetails changeFlag(Integer changeFlag) {
    this.changeFlag = changeFlag;
    return this;
  }

  /**
   * Get changeFlag
   * @return changeFlag
   **/
  @JsonProperty("changeFlag")
  @ApiModelProperty(value = "")
  public Integer getChangeFlag() {
    return changeFlag;
  }

  public void setChangeFlag(Integer changeFlag) {
    this.changeFlag = changeFlag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CellChangeDetails cellChangeDetails = (CellChangeDetails) o;
    return Objects.equals(this.rowSeq, cellChangeDetails.rowSeq) &&
        Objects.equals(this.colSeq, cellChangeDetails.colSeq) &&
        Objects.equals(this.cellValue, cellChangeDetails.cellValue) &&
        Objects.equals(this.cellFmla, cellChangeDetails.cellFmla) &&
        Objects.equals(this.changeFlag, cellChangeDetails.changeFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rowSeq, colSeq, cellValue, cellFmla, changeFlag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CellChangeDetails {\n");
    
    sb.append("    rowSeq: ").append(toIndentedString(rowSeq)).append("\n");
    sb.append("    colSeq: ").append(toIndentedString(colSeq)).append("\n");
    sb.append("    cellValue: ").append(toIndentedString(cellValue)).append("\n");
    sb.append("    cellFmla: ").append(toIndentedString(cellFmla)).append("\n");
    sb.append("    changeFlag: ").append(toIndentedString(changeFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

