/*
 * Boardwalk Cuboid Services
 * Boardwalk Rest API
 *
 * OpenAPI spec version: 1.0.2
 * Contact: apisupport@boardwalltech.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.ColumnChain;
import io.swagger.model.GridChangeBuffer;
import io.swagger.model.GridInfo;
import io.swagger.model.RowChain;
import io.swagger.model.SequencedCellArray;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonInclude;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
/**
 * CellBuffer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-10-05T07:30:29.578Z")
public class CellBuffer   {
  @JsonProperty("info")
  private GridInfo info = null;

  @JsonProperty("rowArray")
  private List<Integer> rowArray = null;

  @JsonProperty("columnArray")
  private List<Integer> columnArray = null;

  @JsonProperty("rowChainArray")
  private List<RowChain> rowChainArray = null;

  @JsonProperty("columnChainArray")
  private List<ColumnChain> columnChainArray = null;

  @JsonProperty("columnCellArrays")
  private List<SequencedCellArray> columnCellArrays = null;

  @JsonProperty("gridChangeBuffer")
  private GridChangeBuffer gridChangeBuffer = null;

  public CellBuffer info(GridInfo info) {
    this.info = info;
    return this;
  }

  /**
   * Get info
   * @return info
   **/
  @JsonProperty("info")
  @ApiModelProperty(value = "")
  public GridInfo getInfo() {
    return info;
  }

  public void setInfo(GridInfo info) {
    this.info = info;
  }

  public CellBuffer rowArray(List<Integer> rowArray) {
    this.rowArray = rowArray;
    return this;
  }

  public CellBuffer addRowArrayItem(Integer rowArrayItem) {
    if (this.rowArray == null) {
      this.rowArray = new ArrayList<Integer>();
    }
    this.rowArray.add(rowArrayItem);
    return this;
  }

  /**
   * Get rowArray
   * @return rowArray
   **/
  @JsonProperty("rowArray")
  @ApiModelProperty(value = "")
  public List<Integer> getRowArray() {
    return rowArray;
  }

  public void setRowArray(List<Integer> rowArray) {
    this.rowArray = rowArray;
  }

  public CellBuffer columnArray(List<Integer> columnArray) {
    this.columnArray = columnArray;
    return this;
  }

  public CellBuffer addColumnArrayItem(Integer columnArrayItem) {
    if (this.columnArray == null) {
      this.columnArray = new ArrayList<Integer>();
    }
    this.columnArray.add(columnArrayItem);
    return this;
  }

  /**
   * Get columnArray
   * @return columnArray
   **/
  @JsonProperty("columnArray")
  @ApiModelProperty(value = "")
  public List<Integer> getColumnArray() {
    return columnArray;
  }

  public void setColumnArray(List<Integer> columnArray) {
    this.columnArray = columnArray;
  }

  public CellBuffer rowChainArray(List<RowChain> rowChainArray) {
    this.rowChainArray = rowChainArray;
    return this;
  }

  public CellBuffer addRowChainArrayItem(RowChain rowChainArrayItem) {
    if (this.rowChainArray == null) {
      this.rowChainArray = new ArrayList<RowChain>();
    }
    this.rowChainArray.add(rowChainArrayItem);
    return this;
  }

  /**
   * Get rowChainArray
   * @return rowChainArray
   **/
  @JsonProperty("rowChainArray")
  @ApiModelProperty(value = "")
  public List<RowChain> getRowChainArray() {
    return rowChainArray;
  }

  public void setRowChainArray(List<RowChain> rowChainArray) {
    this.rowChainArray = rowChainArray;
  }

  public CellBuffer columnChainArray(List<ColumnChain> columnChainArray) {
    this.columnChainArray = columnChainArray;
    return this;
  }

  public CellBuffer addColumnChainArrayItem(ColumnChain columnChainArrayItem) {
    if (this.columnChainArray == null) {
      this.columnChainArray = new ArrayList<ColumnChain>();
    }
    this.columnChainArray.add(columnChainArrayItem);
    return this;
  }

  /**
   * Get columnChainArray
   * @return columnChainArray
   **/
  @JsonProperty("columnChainArray")
  @ApiModelProperty(value = "")
  public List<ColumnChain> getColumnChainArray() {
    return columnChainArray;
  }

  public void setColumnChainArray(List<ColumnChain> columnChainArray) {
    this.columnChainArray = columnChainArray;
  }

  public CellBuffer columnCellArrays(List<SequencedCellArray> columnCellArrays) {
    this.columnCellArrays = columnCellArrays;
    return this;
  }

  public CellBuffer addColumnCellArraysItem(SequencedCellArray columnCellArraysItem) {
    if (this.columnCellArrays == null) {
      this.columnCellArrays = new ArrayList<SequencedCellArray>();
    }
    this.columnCellArrays.add(columnCellArraysItem);
    return this;
  }

  /**
   * Get columnCellArrays
   * @return columnCellArrays
   **/
  @JsonProperty("columnCellArrays")
  @ApiModelProperty(value = "")
  public List<SequencedCellArray> getColumnCellArrays() {
    return columnCellArrays;
  }

  public void setColumnCellArrays(List<SequencedCellArray> columnCellArrays) {
    this.columnCellArrays = columnCellArrays;
  }

  public CellBuffer gridChangeBuffer(GridChangeBuffer gridChangeBuffer) {
    this.gridChangeBuffer = gridChangeBuffer;
    return this;
  }

  /**
   * Get gridChangeBuffer
   * @return gridChangeBuffer
   **/
  @JsonProperty("gridChangeBuffer")
  @ApiModelProperty(value = "")
  public GridChangeBuffer getGridChangeBuffer() {
    return gridChangeBuffer;
  }

  public void setGridChangeBuffer(GridChangeBuffer gridChangeBuffer) {
    this.gridChangeBuffer = gridChangeBuffer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CellBuffer cellBuffer = (CellBuffer) o;
    return Objects.equals(this.info, cellBuffer.info) &&
        Objects.equals(this.rowArray, cellBuffer.rowArray) &&
        Objects.equals(this.columnArray, cellBuffer.columnArray) &&
        Objects.equals(this.rowChainArray, cellBuffer.rowChainArray) &&
        Objects.equals(this.columnChainArray, cellBuffer.columnChainArray) &&
        Objects.equals(this.columnCellArrays, cellBuffer.columnCellArrays) &&
        Objects.equals(this.gridChangeBuffer, cellBuffer.gridChangeBuffer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(info, rowArray, columnArray, rowChainArray, columnChainArray, columnCellArrays, gridChangeBuffer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CellBuffer {\n");
    
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    rowArray: ").append(toIndentedString(rowArray)).append("\n");
    sb.append("    columnArray: ").append(toIndentedString(columnArray)).append("\n");
    sb.append("    rowChainArray: ").append(toIndentedString(rowChainArray)).append("\n");
    sb.append("    columnChainArray: ").append(toIndentedString(columnChainArray)).append("\n");
    sb.append("    columnCellArrays: ").append(toIndentedString(columnCellArrays)).append("\n");
    sb.append("    gridChangeBuffer: ").append(toIndentedString(gridChangeBuffer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

